// <auto-generated />
using System;
using DVar.BLog.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DVar.BLog.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("DVar.BLog.Domain.Entities.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FeedbackCratedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeedbackType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("DVar.BLog.Domain.Entities.FeedbackResponse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ResponseDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId");

                    b.ToTable("FeedbackResponses");
                });

            modelBuilder.Entity("DVar.BLog.Domain.Entities.Feedback", b =>
                {
                    b.OwnsOne("DVar.BLog.Domain.ValueObjects.FullName", "UserFullName", b1 =>
                        {
                            b1.Property<Guid>("FeedbackId")
                                .HasColumnType("TEXT");

                            b1.HasKey("FeedbackId");

                            b1.ToTable("Feedbacks");

                            b1.WithOwner()
                                .HasForeignKey("FeedbackId");
                        });

                    b.Navigation("UserFullName")
                        .IsRequired();
                });

            modelBuilder.Entity("DVar.BLog.Domain.Entities.FeedbackResponse", b =>
                {
                    b.HasOne("DVar.BLog.Domain.Entities.Feedback", "Feedback")
                        .WithMany()
                        .HasForeignKey("FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");
                });
#pragma warning restore 612, 618
        }
    }
}
